export declare class DragDropHandler {
    constructor(target: any);
    _onTouchStart(evt: any): void;
    _onTouchMove(evt: any): void;
    _onTouchEnd(evt: any): void;
    _onTouchCancel(evt: any): void;
    _target_onMouseDown(evt: any): void;
    _window_onMouseUp(evt: any): void;
    _window_onMouseMove(evt: any): void;
    _touchDragDelayTimer_onTick(sender: any, args: any): void;
    _doRequestDragStart(): void;
    _doDragStart(args: any): void;
    _doDragMove(args: any): void;
    _doDragEnd(args: any): void;
    _doDragCancel(): void;
    _doDragEnter(args: any): void;
    _doDragOver(args: any): void;
    _doDragLeave(args: any): void;
    _doDragDrop(args: any): void;
    _onNotifyDragMove(sender: any, args: any): void;
    _onNotifyDragEnd(sender: any, args: any): void;
    _NotifyDragStartEvent: any;
    _NotifyDragMoveEvent: any;
    _NotifyDragEndEvent: any;
    _NotifyDragCancelEvent: any;
    _RequestDragStartEvent: any;
    _DragStartEvent: any;
    _DragMoveEvent: any;
    _DragEndEvent: any;
    _DragCancelEvent: any;
    _DragEnterEvent: any;
    _DragOverEvent: any;
    _DragLeaveEvent: any;
    _DragDropEvent: any;
    _emulator: DragEmulator;
    _data: any;
    _context: any;
    _state: any;
    readonly RequestDragStartEvent: any;
    readonly DragStartEvent: any;
    readonly DragMoveEvent: any;
    readonly DragEndEvent: any;
    readonly DragCancelEvent: any;
    readonly DragEnterEvent: any;
    readonly DragOverEvent: any;
    readonly DragLeaveEvent: any;
    readonly DragDropEvent: any;
    readonly target: any;
}
